# Nabla Grammar (de facto)

Program <- Global* EOF

Global <- Use / Def / Let / Init / GlobalError
GlobalError <- (!GlobalLA .)+

Use <- USE Ident? UseBody?
UseBody <- DOUBLE_COLON UseKind?
UseKind <-
    STAR
    / UseItem
    / UseItems
    / UseError
UseItem <- Ident UseBody? Alias?
UseItems <- LCURLY UseItem* RCURLY?
UseError <- (!UseLA .)+

Def <-  DEF Ident? EQ? Expr?

Let <- LET Ident? EQ? Expr?

Init <- Expr

Expr <- Union / Single / ExprError
ExprError <- (!ExprLA .)+

Union <- Single UnionAlternative+
UnionAlternative <- PIPE Single?

Single <- Struct / List / Named / Primitive

Struct <- LCURLY StructField* RCURLY?
StructField <- Ident (COLON Expr?)? (EQ Expr?)? Alias?

List <- LBRACKET Expr? RBRACKET?

Named <- Ident InnerName* (Struct / List)?
InnerName <- DOUBLE_COLON Ident?

Primitive <- STRING / CHAR / NUMBER / Bool

Bool <- TRUE / FALSE

Alias <- AS (STRING / Ident)?

Ident <- IDENT

# Lookaheads

GlobalLA <-
    USE
    / DEF
    / LET
    / LCURLY
    / RCURLY
    / LBRACKET
    / RBRACKET
    / IDENT
    / EOF
UseLA <-  STAR / GlobalLA
ExprLA <- GlobalLA
