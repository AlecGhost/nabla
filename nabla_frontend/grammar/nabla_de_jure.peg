# Nabla Grammar (de jure)

Program <- Global* EOF

Global <- Use / Def / Let / Init

Use <- USE IDENT UseBody?
UseBody <- DOUBLE_COLON UseKind
UseKind <-
    STAR
    / UseItem
    / UseItems
UseItem <- IDENT UseBody? (AS IDENT)?
UseItems <- LCURLY UseItem+ RCURLY

Def <-  DEF IDENT (COLON Expr)? EQ Expr

Let <- LET IDENT (COLON Expr)? EQ Expr

Init <- Expr

Expr <- Union / Single 

Union <- Single UnionAlternative+
UnionAlternative <- PIPE Single

Single <- Struct / List / Named / Primitive

Struct <- LCURLY StructField* RCURLY
StructField <- IDENT (COLON Expr)? (EQ Expr)? (AS STRING)?

List <- LBRACKET Expr* RBRACKET

Named <- IDENT InnerName* (Struct / List)?
InnerName <- DOUBLE_COLON IDENT

Primitive <- STRING / CHAR / NUMBER / Bool

Bool <- TRUE / FALSE
